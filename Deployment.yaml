apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-app
spec:
  replicas: 1  # Adjust as needed
  selector:
    matchLabels:
      app: nodejs-app
  template:
    metadata:
      labels:
        app: nodejs-app
    spec:
      containers:
      - name: nodejs-app
        image: shaikburhanuddin/nodejs-project:1.0.0  # Replace with your Node.js app image
        imagePullPolicy: "Always"  # Change to your image pull policy
        ports:
        - containerPort: 3000  # Adjust as needed
        env:
          - name: DATABASE_URL
            value: "mongodb://mongodb-service:27017/myDataBase"
      imagePullSecrets:
      - name: my-secret
---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-service
spec:
  selector:
    app: nodejs-app
  ports:
    - protocol: TCP
      port: 3001  # Expose the service on port 3001, adjust as needed
      targetPort: 3000  # Port on which your Node.js app is running
  type: NodePort  # Adjust based on your infrastructure (e.g., NodePort, ClusterIP)
---
  apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  replicas: 1  # Usually, you have one MongoDB instance per pod
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb 
    spec:
      containers:
      - name: mongodb
        image: mongo:4.4.25  # Replace with your MongoDB image
        ports:
        - containerPort: 27017  # Default MongoDB port
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27017  # The port on which MongoDB is running
      targetPort: 27017
